# Parameters controlled by command line input

# Maximum time for whic hsimulation should be performed
max_sim_time = 100
# Number of nodes (can be modified using command line input)
num_nodes = 50
# Inter-arrival time between TXN of each node
T_tx = 10
# Mean inter-arrival time between blocks of each node
T_k = 50
# Start coins (default 0), but can be modified as needed
start_coins = 0.0
# Fraction of nodes that are slow
percent_slow = 0.2

# Number of transactions received last not to be included in the block
# (as there is a possibility of rejection of block 
# due to non-arrival of the TXN due to network delay)
not_included_TXN = 5
# Number of connections
num_connections = 12

# Will store total hashing power 
# (= sum of inverse of mean mining time of nodes)
total_hash_power = 0
# Mining fee per block
mining_fee = 50

# TXN_size = 1kB
TXN_size = 1024 * 8			# 1kB
MB2b = 1024 * 1024 * 8		# Convert MB to bits

# Dictionary storing global pending tasks
# To be used by the simulator to jump to the next event
# Key is the time at which event occurs
# Value is a string describing the event
tasks = {}

# Dictionary to store nodes
# Used by the simulator to perform tasks on each node
# Key is the uniqueID of node
# Value is the object of class node
nodes = {}

# Dictionary to store all blocks generated by nodes
# Used to save simulator memory by not storing the block individually for each node,
# but only storing the uniqueID of the received and validated node.
# The storage is global, however, the access for each node is not.
# Key is the uniqueID of block
# Value is the object of class block/genesisBlock
blocks = {}

# Dictionary to store all transactions generated by nodes
# Used to save simulator memory by not storing the TXN individually for each node,
# but only storing the uniqueID of the received TXN.
# Like blocks, the storage is global, however, the access for each node is not.
# Key is the uniqueID of TXN
# Value is the object of class transaction
transactions = {}

# The value to assign to the next TXN and block generated 
next_TXN_ID = 0
next_block_ID = 1

# File name for storing outputs
file_prefix = "bin/Blockdata_node_"
file_prefix2 = "bin/Data"
file_extension = ".txt"